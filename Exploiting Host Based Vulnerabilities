* All Windows OS and Applications are written in C language which doesnt check for any bound-checking. so these should be done explicitly by developers.
* Servers systems are most likely to have the network vulnerabilities whereas workstation consists of end-user or application based vulnerabilities.
* frequently exploited windows features:
                                          Null sessions- allows anonymous connection to IPC$ share.
                                          LM password hash.
                                          IIS 5.0 unicode.
                                          IIS 5.0 WebDAV.
                                          RPC DCOM.
                                          SMB NetAPI.
                                          
* passwords are stored as two types of hashes:
                                                LM(LanMan):where it UPPERCASES the passowrd then truncated or padded to 14 char long.it is divided in to two 7-bit.
                                                NT hash: it is MD$ hash of the password.
                                                DES_CBC_MD5: used for kerberos authentication.
* Active directory stores passwords in ntds.dit where it can be taken and offline brute force acn be conducted.
* Credential dumps in windows:
                              LSA secrets dump - This technique attempts to crack passwords stored in the Registry (HKEY_LOCAL_MACHINE/Security/Policy/Secrets) by the Local Security Authority Subsystem (LSASS).
                              hash dump - You can dump hashes directly from the Registry hives HKEY_LOCAL_MACHINE\SYSTEM and HKEY_LOCAL_MACHINE\SAM and pass them to a cracker.
                              SYSKEY boot key - SYSTEM\CurrentControlSet\Control\Lsa\JD(bkhive,bkreg tools can be used).
                              cpasswprd dump - Read and crack the cPassword value from the Group Policy Preferences (GPP) file.
                              
* also check for: TCP 5985: WinRM
                  UDP 1900: UPnP/SSDP
                  UDP 5355: LLMNR
                  
* Most windows file system(NTFS) vulnerabilities are due to improper permissions.
* Alternate Data Streams(ADS)- it can be used to hide files in the system.
      C:\>echo "Super secret info" > test.txt:hidden.txt
      C:\>notepad.exe test.txt:hidden.txt
Memory vulnerabilities:
                        Use-After-Free: Attacker attemmpts to use the freed memory.
                        buffer overflow
                        heap overflow
                        integer overflow
                        memory leak DoS
                        
                        
* Default Accounts in windows:               RID(Relative ID)
                             Administrator - 500
                             Guest         - 501
                             krbtgt        - 502
                             Default Account-503
                             WDAGUtilityAccount-504(Windows Defender)
                             default user      - 100x(it is created during the installation of windows).
                             
* wmic useraccount- lists all the useraccounts and theor properties.
* msconfig.exe - lists all the services and provides link to avrious other apps.

* Even *nix os are written in C thus lacking the memory bound checks.
* Frequently exploited Linux features:
                                      ret2libc
                                      Insecure sudo
                                      Sticky  bits
                                      SUID Executables
                                      Dirty cow bug- A race condition in mm/gup.c leverages incorrect handling by the copy-on-write (COW) feature by kernel memory subsystem /proc/self/mem.
                                      Five year bug- A race condition created by raw mode PTY local echo permits privilege escalation.
                                      Remote root flaw- Unsafe second checksum in udp.c can give a remote attacker complete control of a system via UDP traffic.
 * The hashing algorithm used in linux systems depends upon the distro that is used. It can be found out by looking over at first letter.
$1 = MD5
$2a = Blowfish
$5 = SHA-256
$6 = SHA-512

* Tree structure in linux(may differ in some distros).
                                                        
    bin—binaries
    boot—system boot files
    dev—a virtual directory of device files (like USB sticks, webcams)
    etc—configuration files
    home—users’ personal directories
    lib—libraries (application code snippets)
    media—where inserted removable media is mounted
    mnt—(legacy) where storage or partitions are manually mounted
    opt—where software you compile often ends up
    proc—a virtual directory that contains information about running processes
    root—home directory of the root superuser
    usr—shared application files
    sbin—applications only the superuser can run
    srv—data for servers
    sys—virtual directory about connected devices
    tmp—temporary files
    var—logs
*SetUID: If you want to temporarily grant other users the same permissions as the owner, you can enable the SUID bit on that file.  (chmod u+s fillename.)  (sudo find / -perm -400)
*SetGid: You might not want to change someone out of the sales group, but you want them to run that one file as a member of the admins group.(chmod u+g filename).
Setgid also has another behavior if set on a directory: all files inside the directory would take on the permissions of the group.(sudo find / -perm -2000)


 

                                        
